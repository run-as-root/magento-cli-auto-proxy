name: Test Extension

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  validate-composer:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Validate composer.json and composer.lock
        run: composer validate

  build:

    runs-on: ubuntu-latest

    needs: validate-composer

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/composer-cache

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

  PHP-Compatibility:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/composer-cache

      - name: PHP 7.4 compatibility
        run: composer sniffer:php7.4

      - name: PHP 8.0 compatibility
        run: composer sniffer:php8.0

      - name: PHP 8.1 compatibility
        run: composer sniffer:php8.1

      - name: PHP 8.2 compatibility
        run: composer sniffer:php8.2

      - name: PHP 8.3 compatibility
        run: composer sniffer:php8.3

  Static-tests:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/composer-cache

      - name: phpstan
        run: composer phpstan

  PHP-Unit:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/composer-cache

      - name: Setup PHP with Xdebug
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: xdebug

      - name: PHP Unit
        run: composer phpunit

      - name: phpunit-coverage-badge
        uses: timkrase/phpunit-coverage-badge@v1.2.0
        with:
          push_badge: true
          commit_message: "Update coverage badge"
          repo_token: ${{ secrets.GITHUB_TOKEN }}

  Lint:
    runs-on: ubuntu-latest
    needs: build
    
    permissions:
      contents: read
      packages: read
      statuses: write # To report GitHub Actions status checks

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Super-linter
        uses: super-linter/super-linter@v6.7.0
        env:
          # To report GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_PHP: true
          VALIDATE_PHP_PSALM: false
          VALIDATE_PHP_PHPCS: false
          VALIDATE_PHP_PHPSTAN: false
